% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/factorization.R
\name{factorize}
\alias{factorize}
\title{Cholesky factorization of  a covariane matrix with respect to a selected correction method for positive definiteness}
\usage{
factorize(
  covmat,
  pivot = FALSE,
  method = NULL,
  tol = .Machine$double.eps,
  return.err = TRUE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{covmat}{covariance matrix}

\item{pivot}{Logical indicating if pivoting is to be used when factorizing a covariance matrix.  At \code{FALSE} by default}

\item{method}{An argument specifying a correction method for the cholesky factorization of a covariance matrix. At \code{NULL} by default.
If correction is \code{NULL}, then the built-in R function \code{chol} is used.
If correction is \code{"qr"}, then the built-in R function \code{qr} is used.
If correction is \code{"diag"}, then \code{C + diag(tol, n)} is used instead of a covariance matrix \code{C}.
Correction methods \code{"type-I"}, \code{"type-II"}, \code{"eigen-I"}, \code{"eigen-II"}, \code{"GMW81"}, and \code{"SE99"} are refered to Fang and O'leary (2008).
Correction method \code{"nearPD"} use a built-in function nearPD() in the R package Matrix.}

\item{tol}{Numerical tolerance. At \code{.Machine$double.eps} by default}

\item{return.err}{Logical at \code{TRUE} by default. If return.err is true, then this function returns a decomposition error of the covariance matrix in the Frobenius norm.}

\item{verbose}{Logical at \code{FALSE} by default. If verbose is true, then this function prints out all messages.}

\item{...}{only for the function nearPD()}
}
\value{
\code{factorize} returns
\itemize{
\item{\code{covfactor}: } Cholesky factor of the modified covariance matrix
\item{\code{method}: } An argument specifying a correction method for the cholesky factorization of a covariance matrix.
\item{\code{tol}: } Used Numerical tolerance
\item{\code{decomp.err}: } (optional) a decomposition error of the covariance matrix
}
}
\description{
Cholesky factorization of  a covariane matrix with respect to a selected correction method for positive definiteness
}
\examples{
# Example 1: trivial non positive definite matrix
covmat <- matrix(1, 3, 3)

out1 <- factorize(covmat = covmat, pivot = FALSE, method = "qr", tol = .Machine$double.eps, 
                  return.err = TRUE, verbose = TRUE)
out2 <- factorize(covmat = covmat, pivot = FALSE, method = "diag", tol = .Machine$double.eps, 
                  return.err = TRUE, verbose = TRUE)
out3 <- factorize(covmat = covmat, pivot = FALSE, method = "eigen-I", tol = .Machine$double.eps, 
                  return.err = TRUE, verbose = TRUE)
out4 <- factorize(covmat = covmat, pivot = FALSE, method = "eigen-II", tol = .Machine$double.eps, 
                  return.err = TRUE, verbose = TRUE)
out5 <- factorize(covmat = covmat, pivot = FALSE, method = "GMW81", tol = .Machine$double.eps, 
                  return.err = TRUE, verbose = TRUE)
out6 <- factorize(covmat = covmat, pivot = TRUE, method = "GMW81", tol = .Machine$double.eps, 
                  return.err = TRUE, verbose = TRUE)
out7 <- factorize(covmat = covmat, pivot = TRUE, method = "SE99", tol = .Machine$double.eps, 
                  return.err = TRUE, verbose = TRUE)
out8 <- factorize(covmat = covmat, pivot = FALSE, method = "nearPD", tol = .Machine$double.eps, 
                  return.err = TRUE, verbose = TRUE)
out9 <- factorize(covmat = covmat, pivot = TRUE, method = "nearPD", tol = .Machine$double.eps, 
                  return.err = TRUE, verbose = TRUE)

err <- c(out1$decomp.err, out2$decomp.err, out3$decomp.err, out4$decomp.err, out5$decomp.err, 
         out6$decomp.err, out7$decomp.err, out8$decomp.err, out9$decomp.err)
err.table <- data.frame(order(err * 1e6), err) ; colnames(err.table) <- c("rank", "decomp.err")
err.table

# Example 2: trivial positive definite matrix 
covmat <- matrix(c(1, 0.9, 0.7, 0.9, 1, 0.4, 0.7, 0.4, 1), 3, 3)

out01 <- factorize(covmat = covmat, pivot = FALSE, method = NULL, tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out02 <- factorize(covmat = covmat, pivot = TRUE, method = NULL, tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out03 <- factorize(covmat = covmat, pivot = FALSE, method = "qr", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out04 <- factorize(covmat = covmat, pivot = TRUE, method = "qr", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out05 <- factorize(covmat = covmat, pivot = FALSE, method = "diag", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out06 <- factorize(covmat = covmat, pivot = TRUE, method = "diag", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out07 <- factorize(covmat = covmat, pivot = FALSE, method = "type-I", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out08 <- factorize(covmat = covmat, pivot = TRUE, method = "type-I", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out09 <- factorize(covmat = covmat, pivot = FALSE, method = "type-II", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out10 <- factorize(covmat = covmat, pivot = TRUE, method = "type-II", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out11 <- factorize(covmat = covmat, pivot = FALSE, method = "eigen-I", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out12 <- factorize(covmat = covmat, pivot = TRUE, method = "eigen-I", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out13 <- factorize(covmat = covmat, pivot = FALSE, method = "eigen-II", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out14 <- factorize(covmat = covmat, pivot = TRUE, method = "eigen-II", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out15 <- factorize(covmat = covmat, pivot = FALSE, method = "GMW81", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out16 <- factorize(covmat = covmat, pivot = TRUE, method = "GMW81", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out17 <- factorize(covmat = covmat, pivot = FALSE, method = "SE99", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out18 <- factorize(covmat = covmat, pivot = TRUE, method = "SE99", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out19 <- factorize(covmat = covmat, pivot = FALSE, method = "nearPD", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)
out20 <- factorize(covmat = covmat, pivot = TRUE, method = "nearPD", tol = .Machine$double.eps, 
                   return.err = TRUE, verbose = TRUE)

err <- c(out01$decomp.err, out02$decomp.err, out03$decomp.err, out04$decomp.err, out05$decomp.err, 
         out06$decomp.err, out07$decomp.err, out08$decomp.err, out09$decomp.err, out10$decomp.err, 
         out11$decomp.err, out12$decomp.err, out13$decomp.err, out14$decomp.err, out15$decomp.err, 
         out16$decomp.err, out17$decomp.err, out18$decomp.err, out19$decomp.err, out20$decomp.err)
err.table <- data.frame(order(err * 1e6), err) ; colnames(err.table) <- c("rank", "decomp.err")
err.table

# Example 3: non-trivial non positive definite matrix 
# (from the description of the function nearPD())

covmat <- matrix(c(1,     0.477, 0.644, 0.478, 0.651, 0.826,
                   0.477, 1,     0.516, 0.233, 0.682, 0.75,
                   0.644, 0.516, 1,     0.599, 0.581, 0.742,
                   0.478, 0.233, 0.599, 1,     0.741, 0.8,
                   0.651, 0.682, 0.581, 0.741, 1,     0.798,
                   0.826, 0.75,  0.742, 0.8,   0.798, 1),
                 nrow = 6, ncol = 6)

out001 <- factorize(covmat = covmat, pivot = FALSE, method = "eigen-I", tol = .Machine$double.eps, 
                    return.err = TRUE, verbose = TRUE)
out002 <- factorize(covmat = covmat, pivot = FALSE, method = "eigen-II", tol = .Machine$double.eps, 
                    return.err = TRUE, verbose = TRUE)
out003 <- factorize(covmat = covmat, pivot = FALSE, method = "nearPD", tol = .Machine$double.eps, 
                    return.err = TRUE, verbose = TRUE)
out004 <- factorize(covmat = covmat, pivot = TRUE, method = "nearPD", tol = .Machine$double.eps, 
                    return.err = TRUE, verbose = TRUE)

err <- c(out001$decomp.err, out002$decomp.err, out003$decomp.err, out004$decomp.err)
err.table <- data.frame(order(err * 1e6), err) ; colnames(err.table) <- c("rank", "decomp.err")
err.table
}
\references{
Fang, Haw-ren, and Dianne P. Oâ€™leary. "Modified Cholesky algorithms: a catalog with new approaches." Mathematical Programming 115.2 (2008): 319-349.
}
