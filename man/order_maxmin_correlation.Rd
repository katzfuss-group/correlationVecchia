% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vecchia.R
\name{order_maxmin_correlation}
\alias{order_maxmin_correlation}
\title{Maximum-minimum-distance (maxmin) ordering of locations with respect to a user-defined distance matrix}
\usage{
order_maxmin_correlation(
  locs,
  d = NULL,
  d.inv = NULL,
  initial.pt = NULL,
  method = "inverseDist"
)
}
\arguments{
\item{locs}{A matrix of locations}

\item{d}{A matrix of distances between locations (for instance, 1-cor)}

\item{d.inv}{A matrix of inverse of distances between locations (for instance, cor)}

\item{initial.pt}{NULL = which.min(rowMeans(d)), center = euclidean-based center, integer = specify the first obs, 'random' = at random, and else = which.min(rowMeans(d))}

\item{method}{"straightforward" or "inverseDist"}
}
\value{
A vector of indices giving the maxmin ordering with respect to the user-defined distance matrix
}
\description{
Maximum-minimum-distance (maxmin) ordering of locations with respect to a user-defined distance matrix
}
\examples{
locs        <- matrix(runif(15 * 2), 15, 2)
covparms    <- c(1, 0.1)
cormat      <- cov_expo_iso(locs, covparms)

identical(order_maxmin_euclidean(locs),
          order_maxmin_correlation(locs = locs, d = 1 - cormat,
                                   initial.pt = order_maxmin_euclidean(locs)[1],
                                   method = "straightforward"),
          order_maxmin_correlation(locs = locs, d.inv = cormat,
                                   initial.pt = order_maxmin_euclidean(locs)[1],
                                   method = "inverseDist"))

locs        <- matrix(runif(15 * 2), 15, 2)
covparms    <- c(1, 0.1, 10)
locs.trans  <- cbind(locs[ ,1] * covparms[3], locs[,2]) / covparms[2]
cormat      <- cov_expo_aniso(locs = locs, covparms = covparms)

identical(order_maxmin_euclidean(locs.trans),
          order_maxmin_correlation(locs = locs, d.inv = cormat,
                                   initial.pt = order_maxmin_euclidean(locs.trans)[1],
                                   method = "inverseDist"))

# CAUTION: This function can cause numerical issue
identical(order_maxmin_euclidean(locs.trans),
          order_maxmin_correlation(locs = locs, d = 1 - cormat,
                                   initial.pt = order_maxmin_euclidean(locs.trans)[1],
                                   method = "straightforward"))
# Compare to sortSparse_Rcpp
locs         <- matrix(runif(30), 15, 2)
cormat       <- cov_expo_aniso(locs, c(1, 0.1, 1.0))
initial.pt   <- 1

order_maxmin_correlation(locs = locs, d.inv = cormat,
                         initial.pt = initial.pt, method = "inverseDist")
sortSparse_Rcpp(locs, 2.01, initial.pt-1, "correlation",
                "cov_expo_aniso", c(1, 0.1, 1.0))$P + 1
}
