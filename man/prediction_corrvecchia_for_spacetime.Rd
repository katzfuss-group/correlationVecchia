% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prediction.R
\name{prediction_corrvecchia_for_spacetime}
\alias{prediction_corrvecchia_for_spacetime}
\title{Prediction function of Vecchia approximations (for cov_matern_spacetime)}
\usage{
prediction_corrvecchia_for_spacetime(
  z,
  locs,
  locs.pred,
  m,
  initial.pt = NULL,
  covparms,
  nuggets,
  method = "correlation",
  predcond.method = "general",
  var.exact,
  return.values = "all"
)
}
\arguments{
\item{z}{input}

\item{locs}{input}

\item{locs.pred}{input}

\item{m}{input}

\item{initial.pt}{input}

\item{covparms}{input}

\item{nuggets}{input}

\item{method}{input}

\item{predcond.method}{input}

\item{var.exact}{input}

\item{return.values}{input}
}
\value{
output
}
\description{
Prediction function of Vecchia approximations (for cov_matern_spacetime)
}
\examples{
\dontrun{
n               <- 30^2
n.pred          <- 10^2
m               <- 10

locs            <- matrix(runif(3 * n), n, 3)
locs.pred       <- matrix(runif(3 * n.pred), n.pred, 3)

nugget          <- 0.0
covparms        <- c(1, 0.1, 0.1, 0.5)
covmat          <- cov_matern_spacetime(locs = rbind(locs, locs.pred), covparms = covparms) # + nugget * diag(nrow(locs) + nrow(locs.pred))

z.all            <- as.numeric(t(chol(x = covmat)) \%*\% as.matrix(rnorm(nrow(locs) + nrow(locs.pred))))
z               <- z.all[seq(nrow(locs))]
z.pred          <- z.all[seq(nrow(locs.pred)) + nrow(locs)]

out.euclidean   <- prediction_corrvecchia_for_spacetime(z = z, locs = locs, locs.pred = locs.pred, m = m, initial.pt = NULL, covparms = covparms, nuggets = nugget, method = "euclidean", predcond.method = "general", var.exact = TRUE, return.values = "all")
out.corrvecchia <- prediction_corrvecchia_for_spacetime(z = z, locs = locs, locs.pred = locs.pred, m = m, initial.pt = NULL, covparms = covparms, nuggets = nugget, method = "correlation", predcond.method = "general", var.exact = TRUE, return.values = "all")

# MSPE

mean((out.corrvecchia$predict$mu.pred - z.pred)^2)
mean((out.euclidean$predict$mu.pred - z.pred)^2)

# logscore

mean(logscore(out.corrvecchia$predict$mu.pred, out.corrvecchia$predict$var.pred, z.pred))
mean(logscore(out.euclidean$predict$mu.pred, out.euclidean$predict$var.pred, z.pred))
}
}
