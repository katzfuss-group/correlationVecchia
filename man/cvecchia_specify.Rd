% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vecchia.R
\name{cvecchia_specify}
\alias{cvecchia_specify}
\title{specify Euclidean/Correlation-based Vecchia approximation with known parameters}
\usage{
cvecchia_specify(
  locs,
  m = NULL,
  rho = NULL,
  initial.pt = NULL,
  covmodel,
  covparms,
  abs.corr = FALSE,
  coordinate = NULL,
  ordering = "MM",
  ordering.method = "cor",
  conditioning = "NN",
  conditioning.method = "cor"
)
}
\arguments{
\item{locs}{A matrix of locations}

\item{m}{Number of nearby points to condition on}

\item{rho}{Hyperparameter rho (instead of m)}

\item{initial.pt}{Check vecchia_m_specify() and vecchia_rho_specify() functions' description}

\item{covmodel}{Covariance model (or matrix)}

\item{covparms}{Covariance parameters as a vector. The first entry must be its overall variance}

\item{abs.corr}{Logical. If \code{TRUE} then distance = 1-|rho|. If \code{FALSE} then distane = 1-rho}

\item{coordinate}{integer or vector of integers in \code{1,...,d}. This argument is used only when ordering is coord}

\item{ordering}{'MM' or 'coord'}

\item{ordering.method}{'euc' or 'cor'}

\item{conditioning}{'NN' (nearest neighbor)}

\item{conditioning.method}{'euc' or 'cor'}
}
\value{
An object that specifies the vecchia approximation for later use in likelihood evaluation or prediction.
}
\description{
specify Euclidean/Correlation-based Vecchia approximation with known parameters
}
\examples{
n             <- 20^2
m             <- 20
locs          <- matrix(runif(n * 2, 0, 1), n, 2)
covparms      <- c(1, 0.1, 10)

# true cov matrix
covmat <- cov_expo_aniso(locs, covparms)

# Visualize the process
y <- as.numeric(t(chol(covmat)) \%*\% rnorm(n))
fields::quilt.plot(locs[,1], locs[,2], y)

out01 <- cvecchia_specify(locs = locs, m = 18, initial.pt = NULL,
                          covmodel = cov_expo_aniso, covparms = covparms,
                          abs.corr = FALSE, coordinate = NULL,
                          ordering = "MM", ordering.method = "euc",
                          conditioning = "NN", conditioning.method = "euc")

out02 <- cvecchia_specify(locs = locs, rho = 2.1, initial.pt = NULL,
                          covmodel = cov_expo_aniso, covparms = covparms,
                          abs.corr = FALSE, coordinate = NULL,
                          ordering = "MM", ordering.method = "cor",
                          conditioning = "NN", conditioning.method = "cor")

kls.mbased    <- performance(vecchia.approx = out01, locs = locs,
                             covmodel = cov_expo_aniso, covparms = covparms)
kls.rhobased  <- performance(vecchia.approx = out02, locs = locs,
                             covmodel = cov_expo_aniso, covparms = covparms)

barplot(log10(c(kls.mbased, kls.rhobased)),
        names.arg = c("m-based CVecchia", "rho-based CVecchia"),
        main = "Vecchia Approximations", ylab = "log10-scale KL divergence")

sum(!is.na(out01$U.prep$revNNarray)) / n^2
sum(!is.na(out02$U.prep$revNNarray)) / n^2
}
